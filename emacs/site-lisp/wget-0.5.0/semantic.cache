;; Object emacs-wget-0.5.0/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "emacs-wget-0.5.0/"
  :tables (list 
   (semanticdb-table "wget.el"
    :major-mode 'emacs-lisp-mode
    :tags '(("wget-sysdep" include nil nil [1340 1362]) ("thingatpt" include nil nil [1363 1383]) ("defgroup" code nil nil [1385 1471]) ("wget-command" variable (:user-visible-flag t :default-value "wget") nil [1494 1585]) ("wget-basic-options" variable (:user-visible-flag t :default-value (quote ("-v" "--progress=dot"))) nil [1587 1768]) ("wget-default-options" variable (:user-visible-flag t) nil [1770 1966]) ("wget-web-page-options" variable (:user-visible-flag t :default-value (\` ((\,@ wget-default-options) "-r" "-np"))) nil [1968 2281]) ("wget-ftp-default-options" variable (:user-visible-flag t) nil [2283 2492]) ("wget-download-directory" variable (:user-visible-flag t :default-value "~/download") nil [2511 2722]) ("wget-download-directory-filter" variable (:user-visible-flag t) nil [2724 3246]) ("wget-download-log-file" variable (:user-visible-flag t) nil [3265 3583]) ("wget-create-download-log" variable (:user-visible-flag t :default-value (quote always)) nil [3585 3977]) ("wget-download-log-format" variable (:user-visible-flag t :default-value "%T	%U
") nil [3979 4191]) ("wget-download-log-time-format" variable (:user-visible-flag t :default-value "%Y-%m-%d %H:%M:%S") nil [4193 4398]) ("wget-add-download-log-eof" variable (:user-visible-flag t :default-value t) nil [4400 4674]) ("wget-executable-file-extension-list" variable (:user-visible-flag t) nil [4685 4946]) ("wget-truncate-partial-width-windows" variable (:user-visible-flag t :default-value t) nil [4948 5107]) ("wget-max-window-height" variable (:user-visible-flag t :default-value (/ (frame-height) 2)) nil [5109 5230]) ("wget-hook" variable (:user-visible-flag t) nil [5242 5336]) ("wget-after-hook" variable (:user-visible-flag t) nil [5338 5446]) ("wget-load-hook" variable (:user-visible-flag t) nil [5448 5547]) ("wget-debug" variable (:user-visible-flag t) nil [5566 5696]) ("wget-process-buffer" variable (:user-visible-flag t :default-value "*wget*") nil [5698 5806]) ("wget-debug-buffer" variable (:default-value " *wget-log*") nil [5831 5900]) ("wget-long-option-alist" variable (:constant-flag t :default-value (eval-when-compile (let ((options (quote ("bind-address=ADDRESS" "tries=NUMBER" "no-clobber" "continue" "timestamping" "timeout=SECONDS" "limit-rate=AMOUNT" "wait=SECONDS" "waitretry=SECONDS" "random-wait" "proxy=on/off" "quota=QUOTA" "dns-timeout=SECONDS" "connect-timeout=SECONDS" "read-timeout=SECONDS" "dns-cache=off" "restrict-file-names=MODE" "no-directories" "force-directories" "no-host-directories" "cut-dirs=NUMBER" "directory-prefix=PREFIX" "html-extension" "http-user=USER" "http-passwd=PASSWORD" "cache=on/off" "cookies=on/off" "load-cookies FILE" "save-cookies FILE" "ignore-length" "header=ADDITIONAL-HEADER" "proxy-user=USER" "proxy-passwd=PASSWORD" "referer=URL" "save-headers" "user-agent=AGENT-STRING" "post-data=STRING" "post-file=FILE" "dont-remove-listing" "glob=on/off" "passive-ftp" "retr-symlinks" "recursive" "level=DEPTH" "delete-after" "convert-links" "backup-converted" "mirror" "page-requisites" "strict-comments" "accept ACCLIST" "reject REJLIST" "domains=DOMAIN-LIST" "exclude-domains DOMAIN-LIST" "follow-ftp" "follow-tags=LIST" "ignore-tags=LIST" "span-hosts" "relative" "include-directories=LIST" "exclude-directories=LIST" "no-parent")))) (sort (mapcar (lambda (wrd) (let* ((eql (or (string-match "=" wrd) (string-match " " wrd))) (opt (concat "--" (substring wrd 0 (and eql (1+ eql)))))) (cons wrd opt))) options) (lambda (x y) (string< (car x) (car y))))))) nil [5902 7748]) ("wget-process-percent-alist" variable nil nil [7751 8064]) ("wget-process-byte-alist" variable nil nil [8066 8268]) ("wget-process-length-alist" variable nil nil [8270 8476]) ("wget-process-mime-alist" variable nil nil [8478 8676]) ("wget-process-saved-alist" variable nil nil [8678 8885]) ("wget-process-dir-alist" variable nil nil [8887 9105]) ("wget-process-messg-alist" variable nil nil [9107 9303]) ("wget-ftp-regexp" variable (:default-value "^ftp://") nil [9305 9359]) ("wget-current-title" variable nil nil [9361 9392]) ("wget-download-line-format" variable (:constant-flag t :default-value (format "  %s%11s" "[100%]" " ")) nil [9394 9463]) ("wget" function (:user-visible-flag t :arguments ("uri" "&optional" "arg")) nil [9504 10410]) ("wget-web-page" function (:user-visible-flag t :arguments ("uri" "&optional" "arg")) nil [10427 11166]) ("dired-wget" function nil nil [11212 11706]) ("wget-api" function (:arguments ("uri" "current-uri" "&optional" "arg")) nil [11708 12415]) ("wget-cd-download-dir" function (:arguments ("arg" "uri")) nil [12417 13686]) ("wget-download-dir-filter-current-dir" function (:arguments ("arg" "uri" "dir")) nil [13709 14185]) ("wget-download-dir-filter-regexp" function (:arguments ("arg" "uri" "dir")) nil [14187 14616]) ("wget-download-dir-filter-alias" function (:arguments ("arg" "uri" "dir")) nil [14618 15398]) ("wget-download-dir-filter-regexp-and-alias" function (:arguments ("arg" "uri" "dir")) nil [15400 16124]) ("wget-read-download-dir" function (:arguments ("&optional" "dir")) nil [16135 16353]) ("wget-read-options-map" variable (:default-value (copy-keymap minibuffer-local-completion-map)) nil [16371 16508]) ("define-key" code nil nil [16510 16572]) ("define-key" code nil nil [16573 16638]) ("wget-read-options" function (:arguments ("prompt" "init-list" "table")) nil [16641 16923]) ("wget-option-completion" function (:user-visible-flag t) nil [16925 18308]) ("wget-delete-property" function (:arguments ("proc" "alist")) nil [18331 18512]) ("wget-change-property" function (:arguments ("proc" "value" "alist")) nil [18514 18750]) ("wget-uri" function (:arguments ("uri" "dir" "&optional" "options")) nil [18752 19953]) ("wget-process-filter" function (:arguments ("proc" "string")) nil [20105 22579]) ("wget-reset-property" function (:arguments ("proc")) nil [22581 23040]) ("wget-process-sentinel" function (:arguments ("proc" "state")) nil [23042 24423]) ("wget-quit" function (:user-visible-flag t) nil [24425 25541]) ("wget-quit-and-exit" function (:user-visible-flag t) nil [25543 25790]) ("wget-kill-process" function (:arguments ("proc" "del" "&optional" "query")) nil [25792 26386]) ("wget-get-process-alist" function nil nil [26388 26597]) ("wget-get-wget-process" function (:arguments ("proc")) nil [26599 26875]) ("wget-process-file-name" function (:arguments ("proc")) nil [26877 27080]) ("wget-close-wget-output-window" function (:arguments ("win")) nil [27082 27258]) ("wget-recursive-p" function (:arguments ("proc")) nil [27260 27464]) ("wget-mode-map" variable nil nil [27484 27510]) ("if" code nil nil [27511 27888]) ("wget-mode" function nil nil [27890 28337]) ("wget-state-of-progress" function (:user-visible-flag t :arguments ("proc")) nil [28339 29046]) ("wget-revert-buffer" function (:user-visible-flag t) nil [29048 29714]) ("wget-progress-update" function (:arguments ("proc-cell" "&optional" "progress")) nil [29716 31709]) ("wget-info" function (:user-visible-flag t) nil [31711 32538]) ("wget-next-line" function (:user-visible-flag t :arguments ("arg")) nil [32540 32740]) ("wget-previous-line" function (:user-visible-flag t :arguments ("arg")) nil [32742 32970]) ("wget-write-download-log" function (:arguments ("uri")) nil [32985 33990]) ("wget-set-file-executable" function (:arguments ("proc")) nil [33992 34614]) ("wget" package nil nil [34617 34632]) ("unless" code nil nil [34633 34686]))
    :file "wget.el"
    :pointmax 34710
    )
   )
  :file "semantic.cache"
  :semantic-tag-version "2.0pre3"
  :semanticdb-version "2.0pre3"
  )
